
# VMWare NSX-T Firewall Terraform Module
This Terraform configures a firewall policy and rules for a NSX-T Tier 1 North/South Firewall

# Execution environment
This module requires Terraform 1.x.

## Config Data Object Definition
The configuration object describes NSX-T's native firewall configuration. Please see the [NSX-T documentation](https://docs.vmware.com/en/VMware-NSX-T-Data-Center/3.1/administration/GUID-22DF2616-8B3F-4E13-8116-B7501D2A8E6D.html) for details on the options below 


| Variable  | Description | Type | Default |
| ---      |  ------  |----------| ---- |
| `resource_description` | A string added to the descriptin field of all created resouces. | `string` | `Terraform provisioned` |
| `tier1_gateway_path` | The path for the already existing NSX-T Tier-1 gateway. | `string` | - |
| `policy_name` | The name for the new firewall policy | `string` | - |
| `stateful` | Should the firewall policy do stateful inspection. VMware default is `true`| `bool` | - |
| `tcp_strict` | Enable NSX-T feature which enforces the TCP 3 way handshake and disables mid-session pick-up. VMware default is `true` | `bool` | - |
| `locked` | Prevents multiple concurrent users from editing a firewall policy at the same time.| `bool` | - |
| `rules` | A list of objects which describe firewall rules. Rule objects allow all properties in the Terraform [nsxt_policy_gateway_policy](https://registry.terraform.io/providers/vmware/nsxt/latest/docs/resources/policy_gateway_policy#rule) rule object. | `list(map)` | - |
| `rules.*.display_name` | Name for the firewall rule| `string` | - |
| `rules.*.disabled` | Is the rule disabled? | `bool` | - |
| `rules.*.action` | Rule action upon match. Can be `ALLOW`, `DROP`, or `REJECT`| `string` | - |
| `rules.*.direction` | Rule applies to traffic in which direction? Can be `IN`, `OUT`, or `IN_OUT`| `string` | - |
| `rules.*.logged` | Should traffic which matches this rule be logged?| `bool` | - |
| `rules.*.services` | List of services this rule matches. Can be NSX-T built-in services which can be discovered in the NSX-T UI or can be services defined in the `custom_l4_services` configuration map (above)| `list(string)` | - |
| `rules.*.destination_groups` | Defines the destination of traffic for the rule. Empty list means `ANY`. Otherwise specify CIDRs. | `list(string)` | - |
| `custom_l4_services` | A map of objects which is used to define custom TCP/UDP services which can be added to firewall rules. Service objects allow all properties in the Terraform [nsxt_policy_service l4_port_set_entry object](https://registry.terraform.io/providers/vmware/nsxt/latest/docs/resources/policy_service#l4_port_set_entry) | `map` | {} |
| `custom_l4_services.<name>.description` | Description for the service | `string` | - |
| `custom_l4_services.<name>.protocol` | Protocol for the custom service. Can be TCP or UDP | `string` | - |
| `custom_l4_services.<name>.destination_ports` | List of ports that the service receives traffic on. | `list(string)` | - |
| `custom_l4_services.<name>.source_ports` | List of ports that source traffic to the service originates from. May be empty for ANY. | `list(string)` | - |
| `custom_l4_services.<name>.tags` | A map of tags to apply to the custom service object. | `map(string)` | - |
